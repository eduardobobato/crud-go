basePath: /api/v1
consumes:
- application/json
definitions:
  ObjectID:
    items:
      format: uint8
      type: integer
    title: ObjectID is the BSON ObjectID type.
    type: array
    x-go-package: go.mongodb.org/mongo-driver/bson/primitive
  Planet:
    description: Planet defines the structure for an API planet
    properties:
      Clima:
        description: the climate for this planet
        type: string
      CountAparicoes:
        description: the number of appearances in swatter filts
        format: int64
        type: integer
      ID:
        $ref: '#/definitions/ObjectID'
      Nome:
        description: the name for this planet
        type: string
      Terreno:
        description: the ground for this planet
        type: string
    required:
    - Nome
    - Clima
    - Terreno
    type: object
    x-go-package: github.com/eduardobobato/crud-go/model
  ServiceError:
    description: 'ServiceError : business error struct'
    properties:
      message:
        description: The error message
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/eduardobobato/crud-go/errors
info:
  contact:
    email: eduardobobato@hotmail.com.br
    name: Eduardo Bobato
  description: Documentation for Planet API
  title: Planet API.
  version: 1.0.0
paths:
  /planet:
    get:
      description: Return a list of planets
      operationId: GetAllPlanets
      parameters:
      - description: Planet name.
        in: query
        name: Nome
        type: string
      - description: Planet climate.
        in: query
        name: Clima
        type: string
      - description: Planet ground.
        in: query
        name: Terreno
        type: string
      responses:
        "200":
          $ref: '#/responses/planetsResponse'
        "500":
          $ref: '#/responses/serviceErrorResponse'
      tags:
      - planet
    post:
      description: Create a new planet
      operationId: CreatePlanet
      responses:
        "201":
          $ref: '#/responses/planetResponse'
        "400":
          $ref: '#/responses/serviceErrorResponse'
        "500":
          $ref: '#/responses/serviceErrorResponse'
      tags:
      - planet
    put:
      description: Update a planet details by id
      operationId: UpdatePlanetById
      responses:
        "200":
          $ref: '#/responses/planetResponse'
        "400":
          $ref: '#/responses/serviceErrorResponse'
      tags:
      - planet
  /planet/{id}:
    delete:
      description: Delete a planet by id
      operationId: DeletePlanetById
      responses:
        "200":
          $ref: '#/responses/planetResponse'
        "400":
          $ref: '#/responses/serviceErrorResponse'
      tags:
      - planet
    get:
      description: Return a planet by id
      operationId: FindPlanetById
      responses:
        "200":
          $ref: '#/responses/planetResponse'
        "400":
          $ref: '#/responses/serviceErrorResponse'
      tags:
      - planet
produces:
- application/json
responses:
  planetResponse:
    description: A single of planet
    schema:
      $ref: '#/definitions/Planet'
  planetsResponse:
    description: A list of planet
    schema:
      items:
        $ref: '#/definitions/Planet'
      type: array
  serviceErrorResponse:
    description: A error response
    schema:
      $ref: '#/definitions/ServiceError'
schemes:
- http
swagger: "2.0"
